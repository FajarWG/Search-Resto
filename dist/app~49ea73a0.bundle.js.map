{"version":3,"file":"app~49ea73a0.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/components/article-resto.js","webpack://restaurant-apps/./src/scripts/components/foo-ter.js","webpack://restaurant-apps/./src/scripts/components/molecule/review-form.js","webpack://restaurant-apps/./src/scripts/components/nav-bar.js","webpack://restaurant-apps/./src/scripts/data/database.js","webpack://restaurant-apps/./src/scripts/global/endpoint.js","webpack://restaurant-apps/./src/scripts/data/fetch-data.js","webpack://restaurant-apps/./src/scripts/global/config.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nimport CONFIG from '../global/config';\n\nconst articleResto = (data) => {\n  let elmHtml = '';\n  let description = '';\n\n  data.forEach((restaurant) => {\n    description = `${restaurant.description.slice(0, 90)}...`;\n    elmHtml += `\n              <article class=\"item\" id=\"resto-item\" aria>\n                  <div class=\"image\"> \n                      <img class=\"lazyload\" src=\"${CONFIG.BASE_IMAGE_URL + restaurant.pictureId}\" alt=\"Restoran ${restaurant.name} , ${restaurant.city}\">\n                  </div>\n                  <div class=\"item-detail\" id=\"items\">\n                      <a href=\"/#/detail/${restaurant.id}\" class=\"title\">${restaurant.name}</a>\n                      <h4 class=\"subtitle\">${restaurant.city}</h4>\n                      <div class=\"description\">\n                          <p>${description}</p>\n                      </div>\n                  </div>\n              </article>\n              `;\n  });\n  const content = document.querySelector('#exploreContent');\n  content.innerHTML = elmHtml;\n};\n\nconst articleRestoDetail = (restaurant) => {\n  let foodMenu = '';\n  let drinkMenu = '';\n  let reviews = '';\n\n  restaurant.menus.foods.forEach((food) => {\n    foodMenu += `${food.name}, `;\n  });\n  restaurant.menus.drinks.forEach((drink) => {\n    drinkMenu += `${drink.name}, `;\n  });\n\n  restaurant.customerReviews.forEach((review) => {\n    reviews += `\n        <div class=\"review\">\n            <h4>${review.name}</h4>\n            <p>${review.review}</p>\n            <span>${review.date}</span>\n        </div>\n        `;\n  });\n\n  const elmHtml = `\n                <article class=\"item details aria>\n                    <div class=\"image\"> \n                        <img src=\"${CONFIG.BASE_IMAGE_URL + restaurant.pictureId}\" alt=\"Restoran ${restaurant.name} , ${restaurant.city}\">\n                    </div>\n                    <div class=\"item-detail\">\n                    <a href=\"/#/detail/${restaurant.id}\" class=\"title\">${restaurant.name}</a>\n                    <p>${restaurant.city}</p>\n                        <h2 class=\"subtitles\">Informasi</h2>\n                        <h5 class=\"subtitle\">Alamat</h5>\n                        <p>${restaurant.address}</p>\n                        <h5 class=\"subtitle\">Rating</h5>\n                        <p>${restaurant.rating}</p>\n                        <h5 class=\"subtitle\">Food Menu</h5>\n                        <p>${foodMenu}</p>\n                        <h5 class=\"subtitle\">Drink Menu</h5>\n                        <p>${drinkMenu}</p>\n                        <h2 class=\"subtitles\">Deskripsi</h2>\n                        <p>${restaurant.description}</p>\n                        <h2 class=\"subtitles\">Reviews</h2>\n                        ${reviews}\n                    </div>\n                </article>\n                `;\n  const content = document.querySelector('#exploreContent');\n  content.innerHTML = elmHtml;\n};\n\nexport { articleResto, articleRestoDetail };\n","class Footer extends HTMLElement {\n  connectedCallback() {\n    this.render();\n  }\n\n  render() {\n    this.innerHTML = `<footer>\n      <p>&copy; Copyright 2023 | <a href=\"/\">Search Resto</a></p>\n    </footer>`;\n  }\n}\ncustomElements.define('foo-ter', Footer);\n","class reviewForm extends HTMLElement {\n  connectedCallback() {\n    this.render();\n  }\n\n  set detailResto(detailResto) {\n    this._detailResto = detailResto;\n    this._render();\n  }\n\n  set sendReview(eventSend) {\n    console.log(eventSend);\n    this._sendReview = eventSend;\n    this.querySelector('#reviewForm').reset;\n  }\n\n  get valueName() {\n    return this.querySelector('#name').value;\n  }\n\n  get valueReview() {\n    return this.querySelector('#review').value;\n  }\n\n  render() {\n    this.innerHTML = `<div class=\"review-form\">\n      <h2 class=\"subtitles\">Beri Reviews Restaurant Ini</h2>\n      <form id=\"reviewForm\">\n          <label for=\"name\">Nama</label>\n          <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Masukkan nama anda\" required>\n          <label for=\"review\">Review</label>\n          <textarea id=\"review\" name=\"review\" placeholder=\"Masukkan review anda\" required></textarea>\n          <button type=\"submit\" class=\"btn\">Kirim</button>\n      </form>\n      </div>`;\n    this.querySelector('#reviewForm').addEventListener('submit', this.sendReview);\n  }\n}\ncustomElements.define('review-form', reviewForm);\n","class Navbar extends HTMLElement {\n  connectedCallback() {\n    this.render();\n  }\n\n  render() {\n    this.innerHTML = `<header>\n    <nav id=\"nav\" class=\"menu\">\n      <h1>\n        <a href=\"./\" title=\"Navbar Brand\">Search Resto</a>\n      </h1>\n      <button\n        class=\"menu-button\"\n        title=\"off canvas button\"\n        aria-label=\"off canvas button\"\n      >\n        <i class=\"fa fa-times\"></i>\n        <i class=\"fa fa-bars\"></i>\n      </button>\n      <ul class=\"menu-list\">\n        <li><a href=\"./\" title=\"Link ke halaman home\">Home</a></li>\n        <li>\n          <a href=\"#/favorite\" title=\"Link ke halaman favorite\">Favorite</a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.linkedin.com/in/fajarwg\"\n            title=\"Link ke about us\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            >About Us</a\n          >\n        </li>\n      </ul>\n    </nav>\n  </header>`;\n  }\n}\ncustomElements.define('nav-bar', Navbar);\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-prototype-builtins */\n/* eslint-disable consistent-return */\nimport { openDB } from 'idb';\nimport CONFIG from '../global/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantDB = {\n  async getRestaurant(id) {\n    if (!id) {\n      return;\n    }\n\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestaurant(restaurant) {\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteRestaurantDB;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  RESTO: `${CONFIG.BASE_URL}list`,\n  RESTO_DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../global/endpoint';\nimport CONFIG from '../global/config';\n\nclass RestaurantSource {\n  static async getResto() {\n    const response = await fetch(API_ENDPOINT.RESTO);\n    const responseJson = await response.json();\n\n    return responseJson.restaurants;\n  }\n\n  static async detailResto(id) {\n    const response = await fetch(API_ENDPOINT.RESTO_DETAIL(id));\n    const responseJson = await response.json();\n\n    return responseJson.restaurant;\n  }\n\n  static async addReview(review) {\n    const response = await fetch(API_ENDPOINT.REVIEW, {\n      method: 'POST',\n      headers: {\n        'X-Auth-Token': CONFIG.API_TOKEN,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(review),\n    });\n    return response.json();\n  }\n}\n\nexport default RestaurantSource;\n","const CONFIG = {\n  API_KEY: '12345',\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\n  DEFAULT_LANGUAGE: 'en-us',\n  CACHE_NAME: 'Search-Resto',\n  DATABASE_NAME: 'resto-db',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'resto-favorite',\n};\n\nexport default CONFIG;\n"],"names":["articleResto","data","elmHtml","description","forEach","restaurant","slice","CONFIG","pictureId","name","city","id","document","querySelector","innerHTML","articleRestoDetail","foodMenu","drinkMenu","reviews","menus","foods","food","drinks","drink","customerReviews","review","date","address","rating","Footer","this","render","HTMLElement","customElements","define","reviewForm","detailResto","_detailResto","_render","eventSend","console","log","_sendReview","reset","value","addEventListener","sendReview","Navbar","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","get","getAllRestaurants","getAll","putRestaurant","put","deleteRestaurant","RESTO","RESTO_DETAIL","i","fetch","API_ENDPOINT","response","json","responseJson","restaurants","method","headers","body","JSON","stringify","API_KEY","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME"],"sourceRoot":""}